#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman cmr
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref section
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=black, urlcolor=black, citecolor=black"
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 2cm
\rightmargin 1cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "frame=none,basicstyle={\ttfamily\footnotesize},breaklines=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
YETI installation manual
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Minimal system installation requires following compoments:
\end_layout

\begin_layout Itemize
Routing database (postgresql-9.3) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Databases-installation"

\end_inset


\end_layout

\begin_layout Itemize
CDRs database (postgresql-9.3) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Databases-installation"

\end_inset


\end_layout

\begin_layout Itemize
Management interface (web interace written on RoR) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Management-interface-installation"

\end_inset


\end_layout

\begin_layout Itemize
DSS storage (Redis) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:DSS-Storage-installation"

\end_inset


\end_layout

\begin_layout Itemize
Management server (configurations server) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Management-server-installation"

\end_inset


\end_layout

\begin_layout Itemize
Traffic switch (SBC based on SEMS) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Traffic-switch-server-installation"

\end_inset


\end_layout

\begin_layout Itemize
Load balancer (kamailio) see 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Load-balancer-installation"

\end_inset


\end_layout

\begin_layout Section
Databases installation
\begin_inset CommandInset label
LatexCommand label
name "sec:Databases-installation"

\end_inset


\end_layout

\begin_layout Standard
System requires two databases: one for routing and one for CDRs.
\end_layout

\begin_layout Standard
We recommend to place routing database at the same host with management
 interface to reach best interface responsiveness by reducing network delay
 for database requests from web-interface.
\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
both routing and CDRs databases requires similar sets of connected repositories
 and installed packages.
\end_layout

\begin_layout Standard
Make sure that following repositories added on your system:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\begin_layout Plain Layout

deb http://pkg.yeti-switch.org/debian wheezy/ 
\end_layout

\begin_layout Plain Layout

deb http://apt.postgresql.org/pub/repos/apt/ wheezy-pgdg main 
\end_layout

\end_inset

System repositories can be changed by editing of file: /etc/apt/sources.list
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

Install the following packages:
\end_layout

\begin_layout Itemize
postgresql-9.3
\end_layout

\begin_layout Itemize
postgresql-contrib-9.3
\end_layout

\begin_layout Itemize
postgresql-9.3-prefix
\end_layout

\begin_layout Itemize
postgresql-9.3-pgq3
\end_layout

\begin_layout Itemize
postgresql-9.3-yeti
\end_layout

\begin_layout Itemize
skytools3
\end_layout

\begin_layout Itemize
skytools3-ticker
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout
\align left

# aptitude update && aptitude install postgresql-9.3 postgresql-contrib-9.3
 postgresql-9.3-prefix postgresql-9.3-pgq3 postgresql-9.3-yeti skytools3 skytools3-
ticker
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Create databases
\end_layout

\begin_layout Standard
Create routing database:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# su - postgres
\end_layout

\begin_layout Plain Layout

$ psql 
\end_layout

\begin_layout Plain Layout

psql (9.3.5) 
\end_layout

\begin_layout Plain Layout

postgres=# create user yeti encrypted password 'somepassword' superuser;
 
\end_layout

\begin_layout Plain Layout

CREATE ROLE 
\end_layout

\begin_layout Plain Layout

postgres=# create database yeti owner yeti; 
\end_layout

\begin_layout Plain Layout

CREATE DATABASE 
\end_layout

\begin_layout Plain Layout

postgres=# 
\backslash
q
\end_layout

\end_inset


\begin_inset VSpace smallskip
\end_inset

Create database to store CDR:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# su - postgres
\end_layout

\begin_layout Plain Layout

$ psql
\end_layout

\begin_layout Plain Layout

postgres=# create database cdr owner yeti;
\end_layout

\begin_layout Plain Layout

CREATE DATABASE
\end_layout

\begin_layout Plain Layout

postgres=# 
\backslash
q
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: It's recommended to specify values for databases names, usernames,
 passwords differ from specified in this manual for security reasons.
\end_layout

\begin_layout Standard
For large installations is reasonable to place CDR database on dedicated
 server
\end_layout

\begin_layout Subsection
Init schema and data
\end_layout

\begin_layout Standard
Look at 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Configure-Database-Connection"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Init-databases-data"

\end_inset

 for further databases initialization instructions.
\end_layout

\begin_layout Section
Management interface installation
\begin_inset CommandInset label
LatexCommand label
name "sec:Management-interface-installation"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
Server requirements:
\end_layout

\begin_layout Itemize
OS Debian 7 Wheezy with architecture amd64
\end_layout

\begin_layout Itemize
at least 1GB of RAM
\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
Make sure that following repositories added on your system:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\begin_layout Plain Layout

deb http://pkg.yeti-switch.org/debian wheezy/ 
\end_layout

\begin_layout Plain Layout

deb http://packages.dotdeb.org wheezy all 
\end_layout

\end_inset

System repositories can be changed by editing of file: /etc/apt/sources.list
\end_layout

\begin_layout Standard
Install the following packages:
\end_layout

\begin_layout Itemize
yeti-web
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout
\align left

# aptitude update && aptitude install yeti-web
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Configure database connection
\begin_inset CommandInset label
LatexCommand label
name "sub:Configure-Database-Connection"

\end_inset


\end_layout

\begin_layout Standard
To configure database connection edit file /home/yeti-web/config/database.yml
\end_layout

\begin_layout Standard
Create database.yml file with the following content:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

production: 
\end_layout

\begin_layout Plain Layout

adapter: postgresql
\end_layout

\begin_layout Plain Layout

encoding: unicode 
\end_layout

\begin_layout Plain Layout

database: yeti 
\end_layout

\begin_layout Plain Layout

pool: 5 
\end_layout

\begin_layout Plain Layout

username: yeti 
\end_layout

\begin_layout Plain Layout

password: somepassword 
\end_layout

\begin_layout Plain Layout

host: 127.0.0.1 
\end_layout

\begin_layout Plain Layout

schema_search_path: 'gui,public,switch,billing,class4,runtime_stats,sys,logs,dat
a_import' 
\end_layout

\begin_layout Plain Layout

port: 5432 
\end_layout

\begin_layout Plain Layout

#min_messages: warning 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

production_cdr: 
\end_layout

\begin_layout Plain Layout

adapter: postgresql 
\end_layout

\begin_layout Plain Layout

encoding: unicode 
\end_layout

\begin_layout Plain Layout

database: cdr 
\end_layout

\begin_layout Plain Layout

pool: 5 
\end_layout

\begin_layout Plain Layout

username: yeti 
\end_layout

\begin_layout Plain Layout

password: somepassword 
\end_layout

\begin_layout Plain Layout

host: 127.0.0.1 
\end_layout

\begin_layout Plain Layout

schema_search_path: 'cdr,reports,billing' 
\end_layout

\begin_layout Plain Layout

port: 5432 
\end_layout

\begin_layout Plain Layout

#min_messages: warning
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Warning: you should specify correct adresses and credentials using those
 which you chose in previous section
\end_layout

\begin_layout Subsection
Init databases data
\begin_inset CommandInset label
LatexCommand label
name "sub:Init-databases-data"

\end_inset


\end_layout

\begin_layout Standard
To simplify work with databases use utility 
\series bold
yeti-db
\series default
 
\end_layout

\begin_layout Standard
To initialize empty databases:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# yeti-db init 
\end_layout

\begin_layout Plain Layout

# yeti-db --cdr init
\end_layout

\end_inset


\end_layout

\begin_layout Standard
To upgrade database to the lastest version: 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# yeti-db apply_all 
\end_layout

\begin_layout Plain Layout

# yeti-db --cdr apply_all
\end_layout

\end_inset


\end_layout

\begin_layout Standard
You can check actual database versions:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# yeti-db version
\end_layout

\begin_layout Plain Layout

# yeti-db --cdr version
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Attention: During upgrade of the system which working in production command
 
\series bold
apply_all
\series default
 should not be used because this command intended to upgrade to the last
 version only for system without live traffic.
 Systems in production must be upgraded using command 
\series bold
apply
\series default
 which applies just one update in a single run.
 After each upgrade it is important to amend appropriate configuration files
 and restart all traffic switch instances.
 This approach provides zero-downtime upgrade procedure (without loss of
 traffic and CDRs)
\end_layout

\begin_layout Subsection
Launch
\end_layout

\begin_layout Standard
After successfull configuration of databases you finally can run software
 using following commands:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

# /etc/init.d/yeti-web start 
\end_layout

\begin_layout Plain Layout

# /etc/init.d/yeti-cdr-billing start
\end_layout

\begin_layout Plain Layout

# /etc/init.d/yeti-delayed start
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This will run web-interface and CDR processing daemons
\end_layout

\begin_layout Section
DSS Storage installation
\begin_inset CommandInset label
LatexCommand label
name "sec:DSS-Storage-installation"

\end_inset


\end_layout

\begin_layout Standard
Redis is used to synchronize data between traffic switch instances.
 It stores information about used resources (e.g gateways capacity limits)
 to provide correct limitation among all nodes for distributed installations.
\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
For installation make sure that your system have following repositories:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

Install package 
\series bold
redis-server
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# aptitude install redis-server
\end_layout

\end_inset


\end_layout

\begin_layout Section
Management server installation
\begin_inset CommandInset label
LatexCommand label
name "sec:Management-server-installation"

\end_inset


\end_layout

\begin_layout Standard
Since version 1.6.3-175 we started to use central configuration server to
 store yeti module configuration for all nodes in cluster.
\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
For installation make sure that your system have following repositories:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\begin_layout Plain Layout

deb http://pkg.yeti-switch.org/debian wheezy/ 
\end_layout

\begin_layout Plain Layout

deb http://packages.dotdeb.org wheezy all 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

Install package 
\series bold
yeti-management
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# aptitude install yeti-management
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Configuration files
\end_layout

\begin_layout Subsubsection
/etc/yeti/management.cfg
\begin_inset CommandInset label
LatexCommand label
name "sub:/etc/yeti/management.cfg"

\end_inset


\end_layout

\begin_layout Standard
This file contains configuation for management daemon.
\begin_inset Newline newline
\end_inset

Set desired logging level and address to listen.
\begin_inset Newline newline
\end_inset

You can set multiple addresses separated by comma to listen multiple addresses.
\begin_inset Newline newline
\end_inset

Possible log_level values are: (1 - error, 2 - info, 3 - debug)
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

daemon {
\end_layout

\begin_layout Plain Layout

  listen = {
\end_layout

\begin_layout Plain Layout

    "tcp://127.0.0.1:4444"
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  log_level = 2
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
/etc/yeti/system.cfg
\end_layout

\begin_layout Standard
This file contains configuration for all nodes.
\begin_inset Newline newline
\end_inset

Each top-level section defines configuration for node of certain type (
\shape italic
signalling
\shape default
 is for traffic switch nodes).
 All top-level sections contains mandatory section 
\shape italic
globals
\shape default
 which must have all possible values common for all nodes.
\begin_inset Newline newline
\end_inset

Then there is named sections for each node_id which can contains overrides
 of global parameters.
\begin_inset Newline newline
\end_inset

Note: even if your node does not have any specific values you have to define
 empty section for this node anyway, otherwise management node will not
 return configuration for node with such id.
\begin_inset VSpace smallskip
\end_inset

Example of minimal configuration file for node with id 0:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

signalling {
\end_layout

\begin_layout Plain Layout

  globals {
\end_layout

\begin_layout Plain Layout

    yeti {
\end_layout

\begin_layout Plain Layout

      pop_id = 2
\end_layout

\begin_layout Plain Layout

      msg_logger_dir = /var/spool/sems/dump
\end_layout

\begin_layout Plain Layout

      log_dir = /var/spool/sems/logdump
\end_layout

\begin_layout Plain Layout

      routing {
\end_layout

\begin_layout Plain Layout

        schema = switch8
\end_layout

\begin_layout Plain Layout

        function = route_release
\end_layout

\begin_layout Plain Layout

        init = init
\end_layout

\begin_layout Plain Layout

        master_pool {
\end_layout

\begin_layout Plain Layout

          host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

          port = 5432
\end_layout

\begin_layout Plain Layout

          name = yeti
\end_layout

\begin_layout Plain Layout

          user = yeti
\end_layout

\begin_layout Plain Layout

          pass = yeti
\end_layout

\begin_layout Plain Layout

          size = 4
\end_layout

\begin_layout Plain Layout

          check_interval = 10
\end_layout

\begin_layout Plain Layout

          max_exceptions = 0
\end_layout

\begin_layout Plain Layout

          statement_timeout=3000
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        failover_to_slave = false
\end_layout

\begin_layout Plain Layout

        slave_pool {
\end_layout

\begin_layout Plain Layout

          host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

          port = 5432
\end_layout

\begin_layout Plain Layout

          name = yeti
\end_layout

\begin_layout Plain Layout

          user = yeti
\end_layout

\begin_layout Plain Layout

          pass = yeti
\end_layout

\begin_layout Plain Layout

          size = 4
\end_layout

\begin_layout Plain Layout

          check_interval = 10
\end_layout

\begin_layout Plain Layout

          max_exceptions = 0
\end_layout

\begin_layout Plain Layout

          statement_timeout=3000
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        cache {
\end_layout

\begin_layout Plain Layout

          enabled = false
\end_layout

\begin_layout Plain Layout

          check_interval = 60
\end_layout

\begin_layout Plain Layout

          buckets = 100000
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

      }
\end_layout

\begin_layout Plain Layout

      cdr {
\end_layout

\begin_layout Plain Layout

       dir = /var/spool/sems/cdrs
\end_layout

\begin_layout Plain Layout

       completed_dir = /var/spool/sems/cdrs/completed
\end_layout

\begin_layout Plain Layout

       pool_size = 2
\end_layout

\begin_layout Plain Layout

       schema = switch
\end_layout

\begin_layout Plain Layout

       function = writecdr
\end_layout

\begin_layout Plain Layout

       master {
\end_layout

\begin_layout Plain Layout

         host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

         port = 5433
\end_layout

\begin_layout Plain Layout

         name = cdr
\end_layout

\begin_layout Plain Layout

         user = cdr
\end_layout

\begin_layout Plain Layout

         pass = cdr
\end_layout

\begin_layout Plain Layout

       }
\end_layout

\begin_layout Plain Layout

       failover_to_slave = false
\end_layout

\begin_layout Plain Layout

       slave {
\end_layout

\begin_layout Plain Layout

         host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

         port = 5433
\end_layout

\begin_layout Plain Layout

         name = cdr
\end_layout

\begin_layout Plain Layout

         user = cdr
\end_layout

\begin_layout Plain Layout

         pass = cdr
\end_layout

\begin_layout Plain Layout

       }
\end_layout

\begin_layout Plain Layout

       failover_requeue = true
\end_layout

\begin_layout Plain Layout

       failover_to_file = false
\end_layout

\begin_layout Plain Layout

     }
\end_layout

\begin_layout Plain Layout

     resources {
\end_layout

\begin_layout Plain Layout

       reject_on_error = false
\end_layout

\begin_layout Plain Layout

       write {
\end_layout

\begin_layout Plain Layout

         host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

         port = 6379
\end_layout

\begin_layout Plain Layout

         size = 2
\end_layout

\begin_layout Plain Layout

         timeout = 500
\end_layout

\begin_layout Plain Layout

       }
\end_layout

\begin_layout Plain Layout

       read {
\end_layout

\begin_layout Plain Layout

         host = 127.0.0.1
\end_layout

\begin_layout Plain Layout

         port = 6379
\end_layout

\begin_layout Plain Layout

         size = 2
\end_layout

\begin_layout Plain Layout

         timeout = 1000
\end_layout

\begin_layout Plain Layout

       }
\end_layout

\begin_layout Plain Layout

     }
\end_layout

\begin_layout Plain Layout

     registrations {
\end_layout

\begin_layout Plain Layout

       check_interval = 5000
\end_layout

\begin_layout Plain Layout

     }
\end_layout

\begin_layout Plain Layout

     rpc {
\end_layout

\begin_layout Plain Layout

       calls_show_limit = 1000
\end_layout

\begin_layout Plain Layout

     }
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  node 0 { }
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Launch management server
\end_layout

\begin_layout Standard
Use following command to launch configured management server instance
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# /etc/init.d/yeti-management start 
\end_layout

\end_inset

Check file 
\shape italic
/var/log/yeti/yeti-management.log
\shape default
 for daemon logs
\end_layout

\begin_layout Section
Traffic switch server installation
\begin_inset CommandInset label
LatexCommand label
name "sec:Traffic-switch-server-installation"

\end_inset


\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
For installation make sure that your system have following repositories:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\begin_layout Plain Layout

deb http://pkg.yeti-switch.org/debian wheezy/ 
\end_layout

\begin_layout Plain Layout

deb http://packages.dotdeb.org wheezy all
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

Install package 
\series bold
sems-yeti
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# aptitude install sems-yeti
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Configuration files
\end_layout

\begin_layout Subsubsection
/etc/sems/sems.conf
\end_layout

\begin_layout Standard
Replace <SIGNALLING_IP>, <MEDIA_IP> with correct values for your server
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

interfaces=intern
\end_layout

\begin_layout Plain Layout

sip_ip_intern=<SIGNALLING_IP> 
\end_layout

\begin_layout Plain Layout

sip_port_intern=5061 
\end_layout

\begin_layout Plain Layout

media_ip_intern=<MEDIA_IP> 
\end_layout

\begin_layout Plain Layout

rtp_low_port_intern=20000 
\end_layout

\begin_layout Plain Layout

rtp_high_port_intern=50000
\end_layout

\begin_layout Plain Layout

plugin_path=/usr/lib/sems/plug-in/ 
\end_layout

\begin_layout Plain Layout

load_plugins=wav;ilbc;speex;gsm;adpcm;l16;g722;sbc;session_timer;xmlrpc2di;uac_a
uth;di_log;registrar_client
\end_layout

\begin_layout Plain Layout

application = sbc
\end_layout

\begin_layout Plain Layout

plugin_config_path=/etc/sems/etc/
\end_layout

\begin_layout Plain Layout

fork=yes
\end_layout

\begin_layout Plain Layout

stderr=no
\end_layout

\begin_layout Plain Layout

loglevel=2
\end_layout

\begin_layout Plain Layout

max_shutdown_time = 10
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

session_processor_threads=20
\end_layout

\begin_layout Plain Layout

media_processor_threads=2
\end_layout

\begin_layout Plain Layout

session_limit="4000;509;Node overloaded"
\end_layout

\begin_layout Plain Layout

shutdown_mode_reply="508 Node in shutdown mode"
\end_layout

\begin_layout Plain Layout

options_session_limit="900;503;Warning, server soon overloaded"
\end_layout

\begin_layout Plain Layout

# cps_limit="100;503;Server overload"
\end_layout

\begin_layout Plain Layout

use_default_signature=no
\end_layout

\begin_layout Plain Layout

signature="YETI SBC node"
\end_layout

\begin_layout Plain Layout

use_raw_sockets=yes 
\end_layout

\begin_layout Plain Layout

sip_timer_B = 8000 
\end_layout

\begin_layout Plain Layout

default_bl_ttl=0
\end_layout

\begin_layout Plain Layout

registrations_enabled=no
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
/etc/sems/etc/yeti.conf
\end_layout

\begin_layout Standard
Set address of management server Replace <DB IP>, <DB username>, <DB name>,
 <DB password>, <CDR DB IP>, <CDR DB name>, <CDR DB username>, <CDR DB password>
 with addresses and credentials for configured databases.
 Also if it needed for your configuration specify parameters for slave databases
\end_layout

\begin_layout Description
node_id: unique signalling node id
\end_layout

\begin_layout Description
cfg_timeout: timeout of waiting response from management node
\end_layout

\begin_layout Description
cfg_urls: list of comma separated names for management node addresses
\end_layout

\begin_layout Description
cfg_url_<name>: management node address to fetch configuration (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:/etc/yeti/management.cfg"

\end_inset

)
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true"
inline false
status open

\begin_layout Plain Layout

node_id = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

cfg_timeout = 1000
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

cfg_urls = main
\end_layout

\begin_layout Plain Layout

cfg_url_main = tcp://127.0.0.1:4444
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Other configuration files
\end_layout

\begin_layout Standard
Copy defaults for the rest of needed configuration files:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# cd /etc/sems/etc
\end_layout

\begin_layout Plain Layout

# mv /etc/sems/etc/sbc.dist.conf /etc/sems/etc/sbc.conf 
\end_layout

\begin_layout Plain Layout
\align left

# mv /etc/sems/etc/oodprofile.yeti.dist.conf /etc/sems/etc/oodprofile.yeti.conf
 
\end_layout

\begin_layout Plain Layout

# mv /etc/sems/etc/xmlrpc2di.dist.conf /etc/sems/etc/xmlrpc2di.conf 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Launch traffic switch
\end_layout

\begin_layout Standard
Use following command to launch configured traffic switch instance
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# /etc/init.d/sems start 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In case of errors it's useful to use command 
\series bold
sems -E -D3
\series default
 which will launch daemon in foreground with debug logging level
\end_layout

\begin_layout Section
Load balancer installation
\begin_inset CommandInset label
LatexCommand label
name "sec:Load-balancer-installation"

\end_inset


\end_layout

\begin_layout Subsection
Install packages
\end_layout

\begin_layout Standard
For installation make sure that your system have following repositories:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy main 
\end_layout

\begin_layout Plain Layout

deb http://security.debian.org/ wheezy/updates main 
\end_layout

\begin_layout Plain Layout

deb http://ftp.us.debian.org/debian/ wheezy-updates main 
\end_layout

\begin_layout Plain Layout

deb http://pkg.yeti-switch.org/debian wheezy/ 
\end_layout

\begin_layout Plain Layout

deb http://packages.dotdeb.org wheezy all
\end_layout

\begin_layout Plain Layout

deb http://deb.kamailio.org/kamailio wheezy main
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

Instal package 
\series bold
yeti-lb
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# aptitude install yeti-lb
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note: On package configuration stage you will be asked specify address of
 previously installed signalling node and address for load balancer to listen.
\end_layout

\begin_layout Standard
After installation you can change any parameters by editing files: 
\shape italic
/etc/kamailio/dispatcher.list
\shape default
 and 
\shape italic
/etc/kamailio/lb.conf
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Subsection
Launch
\end_layout

\begin_layout Standard
To launch load balancer:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# /etc/init.d/kamailio start
\end_layout

\end_inset


\end_layout

\end_body
\end_document
